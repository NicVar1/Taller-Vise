name: Azure Continuous Delivery Nicolas

on:
  workflow_dispatch:
    inputs:
      IMAGE_REPOSITORY:
        description: 'Repository of the image (same as declared in App Service creation)'
        required: true
        default: 'api-vise'
      IMAGE_TAG:
        description: 'Tag of the image'
        required: true
        default: 'latest'
      AZURE_WEBAPP_NAME:
        description: 'Nombre del App Service creado en Azure'
        required: true

env:
  ACR_NAME: ${{ secrets.ACR_NAME_NICOLAS }}
  IMAGE_URL: ${{ secrets.ACR_NAME_NICOLAS }}.azurecr.io/${{ github.event.inputs.IMAGE_REPOSITORY }}:${{ github.event.inputs.IMAGE_TAG }}

jobs:
  build-and-push-image:
    name: 'Build and Push to ACR'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ env.ACR_NAME }}
          password: ${{ secrets.ACR_PASSWORD_NICOLAS }}

      - name: Build and Push Docker image to ACR
        uses: docker/build-push-action@v6
        with:
          context: ./app
          file: ./app/Dockerfile
          push: true
          tags: ${{ env.IMAGE_URL }}

  deploy:
    name: 'Deploy image to Azure App Service'
    runs-on: ubuntu-latest
    needs: build-and-push-image

    steps:
      - name: Deploy to Azure Web App (Container)
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ github.event.inputs.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_NICOLAS }}
          images: ${{ env.IMAGE_URL }}

  test-deploy:
    name: 'Test deployed API'
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Checkout only session.hurl
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            session.hurl
          sparse-checkout-cone-mode: false

      - name: Install hurl (API testing tool)
        uses: gacts/install-hurl@v1

      - name: Run API tests
        run: |
          echo "Testing endpoint: https://${{ github.event.inputs.AZURE_WEBAPP_NAME }}.azurewebsites.net"
          hurl --variable host=https://${{ github.event.inputs.AZURE_WEBAPP_NAME }}.azurewebsites.net \
               --connect-timeout 20s \
               --error-format long \
               --verbose \
               --test session.hurl
